<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dynamicscrm="http://www.mulesoft.org/schema/mule/dynamicscrm" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
      xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
      version="EE-3.6.1"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/dynamicscrm http://www.mulesoft.org/schema/mule/dynamicscrm/current/mule-dynamicscrm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <data-mapper:config name="Account_To_account" transformationGraphPath="account_to_account_2.grf" doc:name="Account_To_account"/>
    <data-mapper:config name="Account_To_account_1" transformationGraphPath="account_to_account.grf" doc:name="Account_To_account_1"/>
    <data-mapper:config name="Map_To_Map" transformationGraphPath="map_to_map.grf" doc:name="Map_To_Map"/>

	<batch:job name="fromSalesforceBatch" max-failed-records="-1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>

			<batch:step name="getAccountInDynamicsCrmStep" >
				<enricher
					source="#[payload.size() == 0 ? NullPayload.getInstance() : payload.next()]"
					target="#[recordVars['accountInTargetInstance']]" doc:name="store result in record var 'accountInTargetInstance'">
                    <dynamicscrm:retrieve-multiple-by-query config-ref="Microsoft_Dynamics_CRM" query="dsql:SELECT accountid,accountnumber,description,fax,modifiedbyname,modifiedon,name,new_salesforceid,numberofemployees,revenue,sic,telephone1,tickersymbol,websiteurl FROM account
WHERE name = '#[payload[&quot;Name&quot;]]'" doc:name="query account"/>
            
				</enricher>
			</batch:step>

			<batch:step name="updateAccountInDynamicsCrmStep" accept-expression="(!(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; org.mule.templates.date.DateUtils.ISOStringDateToDateTime(payload['LastModifiedDate']).isAfter(org.mule.templates.date.DateUtils.dateToDateTime(recordVars['accountInTargetInstance']['modifiedon'].toGregorianCalendar().getTime())) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById'))">
                <expression-component doc:name="prepare account for update"><![CDATA[if(!(recordVars['accountInTargetInstance'] is NullPayload)) {
	payload.put('Id', recordVars['accountInTargetInstance']['accountid']);
}

payload.remove('LastModifiedById');
payload.remove('LastModifiedDate');

]]></expression-component>
                <data-mapper:transform config-ref="Account_To_account_1" doc:name="transform Salesforce account to Dynamics CRM account"/>
				<batch:commit size="2" doc:name="Batch Commit">
                    <dynamicscrm:update-multiple config-ref="Microsoft_Dynamics_CRM"  logicalName="account" doc:name="update accounts">
                        <dynamicscrm:attributes-list ref="#[payload]"/>
                    </dynamicscrm:update-multiple>
					<logger message="Update Dynamics CRM response: #[payload]"
						level="INFO" doc:name="log response" />
				</batch:commit>
			</batch:step>

			<batch:step name="insertAccountsInDynamicsCrmStep" accept-expression="(recordVars['accountInTargetInstance'] is NullPayload) &amp;&amp; '${sfdc.integration.user.id}' != payload.get('LastModifiedById'))">
                <expression-component doc:name="prepare account for insert"><![CDATA[payload.remove('LastModifiedById');
payload.remove('LastModifiedDate');

]]></expression-component>
                <data-mapper:transform config-ref="Account_To_account" doc:name="transform Salesforce account to Dynamics CRM account"/>
				<batch:commit size="2" doc:name="Batch Commit">
                    <dynamicscrm:create-multiple config-ref="Microsoft_Dynamics_CRM" logicalName="account" doc:name="insert accounts">
                        <dynamicscrm:attributes-list ref="#[payload]"/>
                    </dynamicscrm:create-multiple>
					<logger message="Insert Dynamics CRM response: #[payload]"	level="INFO" doc:name="log response" />
				</batch:commit>
			</batch:step>
		</batch:process-records>

        <batch:on-complete>
            <expression-component doc:name="release lock"><![CDATA[#[app.registry['PollSynchronizer'].unlock()]]]></expression-component>
        </batch:on-complete>
	</batch:job>
	
	<batch:job name="fromDynamicsCrmBatch" max-failed-records="-1">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:process-records>
			<batch:step name="getAccountInSalesforceStep" >
				<enricher source="#[payload]" target="#[recordVars['accountInTargetInstance']]" doc:name="store result in record var 'accountInTargetInstance'">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id, Name, LastModifiedById, LastModifiedDate, NumberOfEmployees FROM Account WHERE (Name = '#[payload['name']]')" doc:name="query account"/>
				</enricher>
			</batch:step>

			<batch:step name="upsertAccountInSalesforceStep" accept-expression="recordVars['accountInTargetInstance'] is NullPayload ? true : org.mule.templates.date.DateUtils.dateToDateTime(payload['modifiedon'].toGregorianCalendar().getTime()).isAfter(org.mule.templates.date.DateUtils.ISOStringDateToDateTime(recordVars['accountInTargetInstance']['LastModifiedDate'])) &amp;&amp; '${dynamicscrm.integration.user.id}' != payload.get('modifiedby_systemuser_reference')">
                <data-mapper:transform config-ref="Map_To_Map" doc:name="transform Dynamics CRM account to Salesforce account"/>
				<expression-component doc:name="prepare account for upsert"><![CDATA[
if(!(recordVars['accountInTargetInstance'] is NullPayload)) {
	payload.put('Id', recordVars['accountInTargetInstance']['Id']);
}

payload.remove('LastModifiedDate');
payload.remove('LastModifiedById');
]]></expression-component>
				<batch:commit size="200" doc:name="Batch Commit">
					<sfdc:upsert config-ref="Salesforce"
						externalIdFieldName="Id" type="Account" doc:name="upsert account">
						<sfdc:objects ref="#[payload]" />
					</sfdc:upsert>
					<logger message="Upsert Salesforce A response: #[payload]"
						level="ERROR" doc:name="log response" />
				</batch:commit>
			</batch:step>

		</batch:process-records>
        <batch:on-complete>
            <expression-component doc:name="release lock"><![CDATA[#[app.registry['PollSynchronizer'].unlock()]]]></expression-component>
        </batch:on-complete>
	</batch:job>

</mule>